{"version":3,"sources":["serviceWorker.js","Functions/Count.js","Functions/AddSymbol.js","Buttons/NumberButtons.js","Buttons/Actions.js","Functions/OutputFunction.js","Buttons/EqualButton.js","Field/Field.js","Buttons/StateButtons.js","Buttons/TopButtons.js","index.js"],"names":["Boolean","window","location","hostname","match","Count","operator","leftOperand","rightOperand","strLeft","strRight","toString","includes","split","join","slice","length","Number","enterRightOperand","AddSymbol","event","anew","field","document","getElementById","str","value","lastSymbol","startsWith","symbol","target","innerHTML","closest","isFinite","scrollBy","buttonValues","NumberButtons","className","map","item","index","onClick","key","Actions","Fragment","OutputFunction","EqualButton","Field","id","disabled","StateButtons","useState","memory","setMemory","TopButtons","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b984ab3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\"use-strict\";\r\n\r\nfunction Count(leftOperand, rightOperand, operator) {\r\n  let strLeft = leftOperand;\r\n  let strRight = rightOperand;\r\n\r\n  if (strRight.toString().includes(\"(\")) {\r\n    strRight = strRight.split(\"(\").join(\"\").split(\")\").join(\"\");\r\n  }\r\n  \r\n  if (strRight.toString().includes(\"%\")) {\r\n    strRight = strLeft / 100 * strRight.slice(0, strRight.length - 1);\r\n  }\r\n\r\n  if (operator === \"+\") {\r\n    return Number(strLeft) + Number(strRight);\r\n  } else if (operator === \"×\") {\r\n    return Number(strLeft) * Number(strRight);\r\n  } else if (operator === \"-\") {\r\n    return Number(strLeft) - Number(strRight);\r\n  } else if (operator === \"÷\") {\r\n    return Number(strLeft) / Number(strRight);\r\n  } else {\r\n    return strLeft;\r\n  }\r\n}\r\n\r\nexport default Count;","\"use-strict\";\r\nimport Count from '../Functions/Count';\r\n\r\nexport let leftOperand = \"\";\r\nlet rightOperand = \"\"; \r\nlet operator;\r\nlet enterRightOperand = false;\r\n\r\nfunction AddSymbol(event, anew) {\r\n  let field = document.getElementById(\"field\");\r\n  let str = field.value;\r\n  let lastSymbol = str.slice(str.length - 1, str.length);\r\n  \r\n  if(event === \"=\") {\r\n    leftOperand = Count(leftOperand, rightOperand, operator);\r\n    rightOperand = \"\";\r\n    operator = \"\";\r\n    enterRightOperand = false;\r\n    return leftOperand;\r\n  } else if (anew === \"setField\") {\r\n      leftOperand = event;\r\n      rightOperand = \"\";\r\n      operator = \"\";\r\n      enterRightOperand = false;\r\n      return;\r\n  } else if (anew === \"addMemory\") {\r\n    if (event.toString().startsWith(\"-\")) {\r\n      rightOperand = \"(\" + event + \")\";\r\n    } else {\r\n      rightOperand += event;\r\n    }\r\n    return;\r\n  } else if (event === \"m\") {\r\n    return Count(leftOperand, rightOperand, operator);\r\n  } else if (event === \"clean\") {\r\n    leftOperand = \"\";\r\n    rightOperand = \"\";\r\n    enterRightOperand = false;\r\n    operator = \"\";\r\n    field.value = \"\";\r\n    return;\r\n  } else if (event === \"change\") {\r\n    if(enterRightOperand) {\r\n      if (lastSymbol === operator) {\r\n        if (leftOperand.toString().startsWith(\"-\")) {\r\n          leftOperand = leftOperand.slice(1);\r\n        } else {\r\n          leftOperand = \"-\" + leftOperand;\r\n        }\r\n      } else {\r\n        if (rightOperand.startsWith(\"(-\")) {\r\n          rightOperand = rightOperand.slice(1);\r\n        } else {\r\n          rightOperand = \"(-\" + rightOperand + \")\";\r\n        }\r\n      }\r\n    } else {\r\n      if (leftOperand.toString().startsWith(\"-\")) {\r\n        leftOperand = leftOperand.slice(1);\r\n      } else {\r\n        leftOperand = \"-\" + leftOperand;\r\n      }\r\n    }\r\n    \r\n    field.value = leftOperand + operator + rightOperand;\r\n    return;\r\n  }\r\n\r\n  let symbol = event.target.innerHTML;\r\n\r\n  if (symbol === \"%\") {\r\n    if (enterRightOperand) {\r\n      if (rightOperand === \"\") return;\r\n      leftOperand = Count(leftOperand, rightOperand + symbol, operator);\r\n      field.value = leftOperand;\r\n      enterRightOperand = false;\r\n      rightOperand = \"\";\r\n      operator = \"\";\r\n    } else {\r\n      return;\r\n    }\r\n  } else if (event.target.closest(\".numbers-container\")) {\r\n    if (enterRightOperand) {\r\n      if (symbol === \".\" && !rightOperand.includes(\".\")) {\r\n        if (lastSymbol === \")\") {\r\n          rightOperand = rightOperand.slice(0, rightOperand.length - 1) + symbol + \")\";\r\n          field.value = str.slice(0, str.length - 1) + symbol + \")\";\r\n        } else {\r\n          rightOperand += symbol;\r\n          field.value = str + symbol;\r\n        }\r\n      } else if (symbol !== \".\") {\r\n        if (lastSymbol === \")\") {\r\n          rightOperand = rightOperand.slice(0, rightOperand.length - 1) + symbol + \")\";\r\n          field.value = str.slice(0, str.length - 1) + symbol + \")\";\r\n        } else {\r\n          rightOperand += symbol;\r\n          field.value = str + symbol;\r\n        }\r\n      } else {\r\n        field.value = str;\r\n      }\r\n    } else {\r\n      if (symbol === \".\" && !leftOperand.includes(\".\")) {\r\n        leftOperand += symbol;\r\n        field.value = str + symbol;\r\n      } else if (symbol !== \".\") {\r\n        leftOperand += symbol;\r\n        field.value = str + symbol;\r\n      } else {\r\n        field.value = str;\r\n      }\r\n    }\r\n  } else if (event.target.closest(\".btn--action\")) {\r\n    if (enterRightOperand) {\r\n      leftOperand = Count(leftOperand, rightOperand, operator);\r\n      rightOperand = \"\";\r\n    } else {\r\n      enterRightOperand = true;\r\n    }\r\n\r\n    if (!isFinite(lastSymbol) && lastSymbol !== \".\" && lastSymbol !== \")\") {\r\n      field.value = leftOperand.slice(0, field.value.length - 1) + symbol;\r\n    } else {\r\n      field.value = leftOperand + symbol;\r\n    };\r\n\r\n    operator = symbol;\r\n  }\r\n\r\n  field.scrollBy(50, 0);\r\n}\r\n\r\nexport default AddSymbol;","import React from 'react';\r\nimport AddSymbol from '../Functions/AddSymbol';\r\n\r\nlet buttonValues = [7, 8, 9, 4, 5, 6, 1, 2, 3];\r\n\r\nfunction NumberButtons() {\r\n  return (\r\n    <div className=\"numbers-container\">\r\n      {buttonValues.map((item, index)=> {\r\n        return (\r\n          <button className=\"btn btn--black\" onClick={AddSymbol} key={index}>{item}</button>\r\n        )\r\n      })}\r\n      <button className=\"btn btn--black btn--big\" onClick={AddSymbol}>0</button>\r\n      <button className=\"btn btn--black\" onClick={AddSymbol}>.</button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default NumberButtons;","import React from 'react';\r\nimport AddSymbol from '../Functions/AddSymbol';\r\n\r\nlet buttonValues = [\"×\", \"-\", \"+\"];\r\n\r\nfunction Actions() {\r\n  return (\r\n    <React.Fragment>\r\n      {buttonValues.map((item, index)=> {\r\n        return (\r\n          <button className=\"btn btn--orange btn--action\" onClick={AddSymbol} key={index}>{item}</button>\r\n        )\r\n      })}\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default Actions;","\"use-strict\";\r\nimport AddSymbol from '../Functions/AddSymbol';\r\n\r\nfunction OutputFunction(event) {\r\n  let field = document.getElementById(\"field\");\r\n  field.value = AddSymbol(\"=\");\r\n}\r\n\r\nexport default OutputFunction;","import React from 'react';\r\nimport OutputFunction from '../Functions/OutputFunction';\r\n\r\nfunction EqualButton() {\r\n  return (\r\n    <button className=\"btn btn--orange\" onClick={OutputFunction}>=</button>\r\n  )\r\n};\r\n\r\nexport default EqualButton;","import React from 'react';\r\n\r\nfunction Field() {\r\n  return (\r\n    <input className=\"field\" id=\"field\" disabled/>\r\n  )\r\n};\r\n\r\nexport default Field;","\"use-strict\"\r\nimport React, {useState} from 'react';\r\nimport AddSymbol from '../Functions/AddSymbol';\r\nimport Count from '../Functions/Count';\r\n\r\nfunction StateButtons() {\r\n  let [memory, setMemory] = useState(0);\r\n\r\n  function addMemeory() {\r\n    setMemory( Count(memory, AddSymbol(\"m\"), \"+\") );\r\n  };\r\n\r\n  function reduceMemory() {\r\n    setMemory( Count(memory, AddSymbol(\"m\"), \"-\") );\r\n  };\r\n\r\n  function cleanMemory() {\r\n    setMemory(0);\r\n  };\r\n\r\n  function readMemory() {\r\n    let field = document.getElementById(\"field\");\r\n    let lastSymbol = field.value.slice(field.value.length - 1, field.value.length);\r\n\r\n    if( isFinite(lastSymbol) || lastSymbol === \".\" || lastSymbol === \")\") {\r\n      field.value = memory;\r\n      AddSymbol(memory, \"setField\");\r\n    } else {\r\n      if(memory.toString().startsWith(\"-\")) {\r\n        field.value = field.value + \"(\" + memory + \")\";\r\n      } else {\r\n        field.value = field.value + memory;\r\n      }\r\n      AddSymbol(memory, \"addMemory\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"btn btn--black btn--small\" onClick={cleanMemory}>mc</button>\r\n      <button className=\"btn btn--black btn--small\" onClick={readMemory}>mr</button>\r\n      <button className=\"btn btn--black btn--small\" onClick={reduceMemory}>m-</button>\r\n      <button className=\"btn btn--orange btn--small\" onClick={addMemeory}>m+</button>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default StateButtons;","\"use-strict\"\r\nimport React from 'react';\r\nimport AddSymbol from '../Functions/AddSymbol';\r\n\r\nfunction TopButtons() {\r\n  function cleanField() {\r\n    AddSymbol(\"clean\")\r\n  }\r\n\r\n  function changeOperand() {\r\n    AddSymbol(\"change\")\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"btn btn--gray\" onClick={cleanField}>AC</button>\r\n      <button className=\"btn btn--gray\" onClick={changeOperand}>+/-</button>\r\n      <button className=\"btn btn--gray\" onClick={AddSymbol}>%</button>\r\n      <button className=\"btn btn--orange btn--action\" onClick={AddSymbol}>÷</button>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default TopButtons;","\"use-strict\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport NumberButtons from './Buttons/NumberButtons';\r\nimport Actions from './Buttons/Actions';\r\nimport EqualButton from './Buttons/EqualButton';\r\nimport Field from './Field/Field';\r\nimport StateButtons from './Buttons/StateButtons';\r\nimport TopButtons from './Buttons/TopButtons';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <Field></Field>\r\n    <TopButtons></TopButtons>\r\n    <StateButtons></StateButtons>\r\n    <NumberButtons></NumberButtons>\r\n    <Actions></Actions>\r\n    <EqualButton></EqualButton>\r\n  </React.Fragment>,\r\n  document.getElementById('container')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}